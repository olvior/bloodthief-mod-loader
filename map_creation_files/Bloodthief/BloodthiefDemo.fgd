@PointClass color(213 213 0) size(-8 -8 -8, 8 8 8) = vt_torch : "Will be a torch in-game. Rotating the torch will affect the direction of its light" 
[
	mangle(string) : "" : "0 0 0"
]

@PointClass color(218 0 218) size(-8 -8 -8, 8 8 8) = vt_portcullis : "Will be a portcullis in-game"
[
	mangle(string) : "" : "0 0 0"
]

@SolidClass color(204 204 204) = vt_lava : "This is lava in-game and will hurt the player" []

@PointClass color(255 0 0) size(-8 -8 -8, 8 8 8) base(Target) = vt_generic_knight : "A footsoldier knight" 
[
	dont_spawn_after_checkpoint(integer) : "" : 999
	mangle(string) : "" : "0 0 0"
]

@PointClass color(213 86 0) size(-4 -4 -4, 4 4 4) = vt_lever : "Will a lever in-game. Press the 'E' key to trigger it" 
[
	mangle(string) : "" : "0 0 0"
	required_keys_comma_sep(string) : "" : ""
	target(string) : "" : ""
]

@SolidClass color(204 204 204) = vt_water : "This is water in-game" []

@PointClass color(245 245 177) size(-8 -8 -8, 8 8 8) = vt_sup_light : "A bright light" 
[
	mangle(string) : "" : "0 0 0"
]

@PointClass color(47 85 183) size(-8 -8 -8, 8 8 8) base(Target) = vt_health_pickup : "A blood vial that will fill the player's blood meter" 
[
	mangle(string) : "" : "0 0 0"
	target(string) : "" : ""
]

@PointClass color(47 85 183) size(-8 -8 -8, 8 8 8) = vt_bow_pickup : "A crossbow. Press the 'F' key to fire arrows from it in-game" 
[
	mangle(string) : "" : "0 0 0"
	target(string) : "" : ""
]

@PointClass color(47 85 183) size(-8 -8 -8, 8 8 8) = vt_sword_pickup : "A sword (currently has no function)" 
[
	mangle(string) : "" : "0 0 0"
	target(string) : "" : ""
]

@SolidClass color(204 204 204) base(Breakable, GlobalIllumination) = vt_breakable : "vt_breakable" []

@PointClass color(47 85 183) size(-8 -8 -8, 8 8 8) = vt_slide_pickup : "Activates the super slide powerup" 
[
	mangle(string) : "" : "0 0 0"
	target(string) : "" : ""
]

@SolidClass color(204 204 204) = vt_secret_area : "Triggers the 'secret' toast and counts towards one of the map's secrets" []

@SolidClass color(204 204 204) base(func_detail) = vt_end_level_area : "Triggers the end of the level on interaction" []

@SolidClass color(204 204 204) base(Toast) = vt_toast_area : "vt_toast_area" 
[
	should_pause(integer) : "" : 0
	toast_text(string) : "" : ""
]

@SolidClass color(204 204 204) base(func_detail_illusionary) = vt_checkpoint_area : "The player will respawn in this area" 
[
	angle(float) : "" : "0"
	checkpoint_index(integer) : "" : 0
	checkpoint_region(string) : "" : ""
]

@PointClass color(255 0 0) size(-8 -8 -8, 8 8 8) base(Target) = vt_bow_knight : "A bow knight" 
[
	dont_spawn_after_checkpoint(integer) : "" : 999
	mangle(string) : "" : "0 0 0"
]

@PointClass color(47 85 183) size(-8 -8 -8, 8 8 8) = vt_arrow_pickup : "Gives the player arrows on pick up. The default arrow count is '3'" 
[
	arrow_count(integer) : "" : 3
	target(string) : "" : ""
]

@PointClass color(47 85 183) size(-8 -8 -8, 8 8 8) base(Target) = vt_key_pickup : "A key. Collecting it will trigger a 'pick up' toast and unlock a locked door" 
[
	key_name(string) : "" : ""
	pick_up_message(string) : "" : ""
]

@PointClass color(47 85 183) size(-8 -8 -8, 8 8 8) = vt_bouncy_dash_pickup : "Activates the bouncy air-dash pickup" 
[
	mangle(string) : "" : "0 0 0"
	target(string) : "" : ""
]

@SolidClass color(204 204 204) base(Target) = vt_trigger_area : "A trigger area used to make something happen, most commonly with key pick ups" 
[
	required_keys_comma_sep(string) : "List of keys required" : ""
	trigger_dependency_count(integer) : "" : 0
  target(string) : "The thing this area triggers" : ""
]

@SolidClass base(Target, GlobalIllumination, PositionMod) = vt_mover : "For things that move" 
[
	auto_move_after_checkpoint(integer) : "Automaticaly moves after a checkpoint, leave at 999 for nothing" : 999
	duration(float) : "Movement time (seconds)" : "1"
	end_motion_target(string) : "" : ""
	move_delay(float) : "Delay" : "0"
	start_motion_target(string) : "" : ""
	translation(string) : "How it will change" : "0 0 0"
  targetname(string) : "The name of the triggered target" : ""
]

@SolidClass color(204 204 204) base(Func, Surface) = func_geo : "Static geometry entity" 
[
	extra_cull_margin(float) : "" : "0.5"
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = Appearance
[
	appearance_flags(flags) = 
	[
		1 : "Not on Easy" : 0
		2 : "Not on Normal" : 0
		4 : "Not on Hard" : 0
	]
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) base(Appearance, ShadowCast) = Func
[
	_phong(integer) : "Smooth mesh output." : 0
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = ShadowCast
[
	cast_shadow(choices) : "Shadow casting display setting." : 1 = 
	[
		2 : "Double-sided"
		0 : "Off"
		1 : "On"
		3 : "Shadows Only"
	]
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = Target
[
	trigger_count(integer) : "" : 1
]

@PointClass color(47 85 183) size(-8 -8 -8, 8 8 8) base(Target) = vt_triggerable_toast : "Will display a toast when triggered instead of on player interaction" 
[
	should_pause(integer) : "" : 0
	toast_text(string) : "" : ""
]

@SolidClass color(204 204 204) = vt_blood_area : "A pool of blood, which the player can replenish their blood meter from" []

@SolidClass base(GlobalIllumination, PositionMod) = vt_damage_mover : "For things that move and damage the player" 
[
	auto_move_after_checkpoint(integer) : "" : 999
	duration(float) : "" : "1"
	translation(string) : "" : "0 0 0"
]

@PointClass color(47 85 183) model({"path": "qodot_definitions/tb_models/tb_test_arrow.glb", "scale" : 32 }) size(-16 -16 -32, 16 16 16) = vt_test_arrow : "An unused, simplified arrow model. Probably designed as a prototype" 
[
	arrow_count(integer) : "" : 3
	target(string) : "" : ""
]

@SolidClass = vt_damage_area : "For things that damage the player on interaction" 
[
	auto_move_after_checkpoint(integer) : "" : 999
	duration(float) : "" : "1"
	translation(string) : "" : "0 0 0"
]

@PointClass color(47 85 183) size(-8 -8 -8, 8 8 8) = vt_generic_pickup : "A generic form of a pickup item, (maybe) spawned when triggered instead of on pick up. The default option activates the slide to kill powerup" 
[
	mangle(string) : "" : "0 0 0"
	powerup_type(string) : "" : "SLIDE_TO_KILL"
	target(string) : "" : ""
]

@SolidClass color(204 204 204) = vt_intensity_change_area : "Changes the intensity of... something, we're not sure exactly what" 
[
	intensity_level(float) : "" : "-1"
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = Surface
[
	surface_type(choices) : "Which footstep sound should play while moving across a surface" : 0 = 
	[
		1 : "dirt"
		0 : "floor"
		3 : "wall"
		2 : "wet"
	]
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = GlobalIllumination
[
	gi_mode(choices) : "The GI Mode for the thing" : 2 = 
	[
		0 : "disabled"
		2 : "dynamic"
		1 : "static"
	]
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = PositionMod
[
	end_position_ratio_in_editor(float) : "" : "1"
]

@SolidClass color(204 204 204) base(Phong) = func_detail : "Static collidable geometry. Builds a StaticBody3D with a MeshInstance3D and a single convex CollisionShape3D. Does not occlude other VisualInstance3D nodes." []

@SolidClass color(204 204 204) base(Phong) = func_detail_illusionary : "Static geometry with no collision. Builds a Node3D with a MeshInstance3D. Does not occlude other VisualInstance3D nodes." []

@SolidClass color(204 204 204) base(Phong) = func_illusionary : "Static geometry with no collision. Builds a Node3D with a MeshInstance3D and an Occluder3D to aid in render culling of other VisualInstance3D nodes." []

@SolidClass color(204 204 204) = worldspawn : "Default static world geometry. Builds a StaticBody3D with a single MeshInstance3D and a single convex CollisionShape3D shape. Also builds Occluder3D to aid in render culling of other VisualInstance3D nodes." []

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = Phong
[
	_phong(choices) : "Phong shading" : 0 = 
	[
		0 : "Disabled"
		1 : "Smooth shading"
	]
	_phong_angle(float) : "Phong smoothing angle" : "89"
]

@SolidClass color(204 204 204) = group : "Builds a StaticBody3D with a single MeshInstance3D and a single convex CollisionShape3D shape. Also builds Occluder3D to aid in render culling of other VisualInstance3D nodes." []

@PointClass color(79 0 79) size(-8 -8 -8, 8 8 8) = vt_fmod_sound : "A sound that will loop and exist in-game, triggered by FMOD" 
[
	guid(string) : "" : ""
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = Toast
[
	toast_type(choices) : "How the toast should display to the player" : 4 = 
	[
		4 : "area_closed"
		1 : "display_timed"
		3 : "game_event_closed"
		5 : "player_choice"
		2 : "player_closed"
		0 : "unspecified"
	]
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = Breakable
[
	breakable_type(choices) : "How the breakable surface should be interacted with" : 1 = 
	[
		3 : "explosion_only"
		2 : "glass"
		4 : "ground_pound_only"
		1 : "standard"
		0 : "unspecified"
	]
]

@PointClass color(79 0 79) size(-8 -8 -8, 8 8 8) = vt_player_start : "Where the player starts in the map" 
[
	angle(float) : "" : "0"
]

@PointClass color(47 85 183) size(-8 -8 -8, 8 8 8) = vt_tutorial_pickup : "Used for a tutorial overlay. (Probably) becomes a book in-game" 
[
	tutorial_data_path(string) : "" : ""
]

@PointClass color(236 125 0) size(-16.0 -16.0 -1.0, 16.0 16.0 1.0) base(Target) = vt_eyeball_shrine : "An eyeball shrine." 
[
	artifact_part_name(string) : "" : "NO_ARTIFACT_NAME"
	mangle(string) : "" : "0.0 0.0 0.0"
	target(string) : "" : ""
]

@PointClass color(47 85 183) size(-8.0 -8.0 -8.0, 8.0 8.0 8.0) base(Target) = vt_eyeball_pickup : "An eyeball pickup for ghosts." 
[
	eyeball_name(string) : "" : "eyeball_001"
	mangle(string) : "" : "0.0 0.0 0.0"
	target(string) : "" : ""
]

@PointClass color(255 0 0) size(-8.0 -8.0 -8.0, 8.0 8.0 8.0) base(Target) = vt_skull : "A skull" 
[
	dont_spawn_after_checkpoint(integer) : "" : 999
	radius(float) : "" : "5.0"
	speed(float) : "" : "2.0"
]

@PointClass color(47 85 183) size(-8.0 -8.0 -8.0, 8.0 8.0 8.0) base(Target) = vt_artifact_pickup : "A pickup for an artifact part." 
[
	artifact_part_name(string) : "" : "NO_ARTIFACT_NAME"
	mangle(string) : "" : "0.0 0.0 0.0"
	target(string) : "" : ""
]

@PointClass color(255 0 0) size(-8.0 -8.0 -8.0, 8.0 8.0 8.0) base(Target) = vt_vampire : "A vampire" 
[
	dont_spawn_after_checkpoint(integer) : "" : 999
]

@SolidClass = vt_launchpad : "A thing that bounces things that hit it." 
[
	bounce_force(float) : "" : "5.0"
	bounce_force_max(float) : "" : "20.0"
]

@PointClass color(255 0 0) size(-8.0 -8.0 -8.0, 8.0 8.0 8.0) base(Target) = vt_black_knight : "A black knight" 
[
	dont_spawn_after_checkpoint(integer) : "" : 999
	radius(float) : "" : "5.0"
	speed(float) : "" : "2.0"
]
